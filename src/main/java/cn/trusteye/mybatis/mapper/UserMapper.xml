<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离
注意：使用mapper代理方法开发，namespace有特殊重要的作用
-->

<mapper namespace="cn.trusteye.mybatis.mapper.UserMapper">

    <resultMap id="userResultMap" type="user">
        <id column="_id" property="id"/>
        <result column="_username" property="username"/>
    </resultMap>


    <select id="findUserById" parameterType="int" resultType="user">
        SELECT * FROM USER WHERE id=#{value}
    </select>

    <select id="findUserByName" parameterType="java.lang.String" resultType="user">
    SELECT * FROM USER WHERE username LIKE #{value}
    </select>

    <!--ResultMap-->
    <select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
     SELECT id _id,username _username FROM USER WHERE id=#{value}
    </select>


    <!--动态SQL片段-->
    <select id="findUserList" parameterType="UserQueryVo" resultType="userCustom">
      SELECT * FROM USER
        <where>
            <if test="userCustom!=null">
                <if test="userCustom.sex!=null and userCustom.sex!=''">
                    and user.sex = #{userCustom.sex}
                </if>
                <if test="userCustom.username!=null and userCustom.username!=''">
                    and user.username LIKE '%${userCustom.username}%'
                </if>

                <!--AND (id=1 OR id=6 OR id=30)-->
                <if test="ids!=null">
                    <foreach collection="ids" item="user_id" open="AND (" close=")" separator="OR">
                        id=#{user_id}
                    </foreach>
                </if>

                <!--IN (1,6,30)-->
            </if>
        </where>
    </select>

    
    <!--

        <insert id="insertUser" parameterType="user">
            <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
            </selectKey>
            INSERT INTO USER(id,username,birthday,sex,address) VALUES(#{id},#{username},#{birthday},#{sex},#{address})
        </insert>

        <delete id="deleteUser" parameterType="java.lang.Integer">
            DELETE FROM USER WHERE ID=#{value}
        </delete>

        <update id="updateUser" parameterType="user">
            UPDATE USER SET USERNAME=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
        </update>
    -->
</mapper>


